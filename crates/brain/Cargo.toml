[package]
name = "ha"
version = "0.1.0"
rust-version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true

[features]
default = []

# Enable code that expects sensor hardware to be present. Will stop execution
# if hardware is not present,
# on by default for testing use cargo flag: --no-default-features
sensors_connected = []
live_server = []

[dependencies]
protocol = { path = "../protocol", features = ["alloc"] }

futures = "0.3"
tokio = { version = "1", features = ["full"] }
axum = "0.7.4"
axum-macros = "0.4.1"

philipshue = { git = "https://github.com/dvdsk/philipshue", branch = "master" }

serde = { version = "1.0", features = ["derive"] }
serde_yaml = "0.9"
bincode = "1.3"

thiserror = "1.0"

chrono = { version = "0.4", features = ["serde"] }
bytes = "1.5"
byteorder = "1.4"
num = { version = "0.4"}

crossbeam-channel = "0.5"

sled = "0.34"
# pagecache = "0.17"
reqwest = {version = "0.11", default-features = false, features = ["rustls-tls"]}

mpd = "0.1"
rand = "0.8"
retry = "2"

futures-util = "0.3.30"
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
tracing-journald = "0.3.0"
log-panics = "2.1.0"
clap = { version = "4.5.2", features = ["derive"] }
futures-concurrency = "7.5.0"
time = { version = "0.3.36", features = ["local-offset"] }
strum = { version = "0.26.2", default-features = false, features = ["derive"] }
